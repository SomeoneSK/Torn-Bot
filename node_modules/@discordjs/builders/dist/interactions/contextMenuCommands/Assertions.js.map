{"version":3,"file":"Assertions.js","sourceRoot":"/","sources":["interactions/contextMenuCommands/Assertions.ts"],"names":[],"mappings":";;;;AAAA,yDAAoB;AACpB,gCAA8D;AAG9D,SAAgB,0BAA0B,CAAC,IAAY,EAAE,IAAY;IACpE,qCAAqC;IACrC,YAAY,CAAC,IAAI,CAAC,CAAC;IAEnB,uBAAuB;IACvB,YAAY,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC;AAND,gEAMC;AAED,MAAM,aAAa,GAAG,YAAE,CAAC,MAAM;KAC7B,SAAS,CAAC,CAAC,CAAC;KACZ,SAAS,CAAC,EAAE,CAAC;KACb,OAAO,CAAC,2BAA2B,CAAC,CAAC;AAEvC,SAAgB,YAAY,CAAC,IAAa;IACzC,IAAA,YAAE,EAAC,IAAI,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;AACjC,CAAC;AAFD,oCAEC;AAED,MAAM,aAAa,GAAG,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA6D,CAAC,CAAC;AAErG,SAAgB,YAAY,CAAC,IAAa;IACzC,IAAA,YAAE,EAAC,IAAI,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;AACjC,CAAC;AAFD,oCAEC;AAED,MAAM,0BAA0B,GAAG,YAAE,CAAC,OAAO,CAAC;AAE9C,SAAgB,yBAAyB,CAAC,KAAc;IACvD,IAAA,YAAE,EAAC,KAAK,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;AAC7D,CAAC;AAFD,8DAEC","sourcesContent":["import ow from 'ow';\nimport { ApplicationCommandType } from 'discord-api-types/v9';\nimport type { ContextMenuCommandType } from './ContextMenuCommandBuilder';\n\nexport function validateRequiredParameters(name: string, type: number) {\n\t// Assert name matches all conditions\n\tvalidateName(name);\n\n\t// Assert type is valid\n\tvalidateType(type);\n}\n\nconst namePredicate = ow.string\n\t.minLength(1)\n\t.maxLength(32)\n\t.matches(/^( *[\\p{L}\\p{N}_-]+ *)+$/u);\n\nexport function validateName(name: unknown): asserts name is string {\n\tow(name, 'name', namePredicate);\n}\n\nconst typePredicate = ow.number.oneOf([ApplicationCommandType.User, ApplicationCommandType.Message]);\n\nexport function validateType(type: unknown): asserts type is ContextMenuCommandType {\n\tow(type, 'type', typePredicate);\n}\n\nconst defaultPermissionPredicate = ow.boolean;\n\nexport function validateDefaultPermission(value: unknown): asserts value is boolean {\n\tow(value, 'default_permission', defaultPermissionPredicate);\n}\n"]}